//Design
module jkff(j,k,clk,rst,clr,q);
  input j,k,clk,rst,clr;
  output reg q;
  always@(negedge clk)
    begin
      if(rst==1 || clr==1)
        q <= 0;
      else if(j==0 && k==0)
        q <= q;
      else if(j==0 && k==1)
        q <= 0;
      else if(j==1 && k==0)
        q <= 1;
      else if(j==1 && k==1)
        q <= ~q;
    end
endmodule

module count(clk,rst,o);
  input clk,rst;
  output reg[3:0] o;
  reg j0,j1,j2,j3,k0,k1,k2,k3;
  reg q0,q1,q2,q3,clr;
  
  jkff a(j0,k0,clk,rst,clr,q0);
  jkff b(j1,k1,q0,rst,clr,q1);   
  jkff c(j2,k2,q1,rst,clr,q2);
  jkff d(j3,k3,q2,rst,clr,q3);
  
  always@(negedge clk)
    begin 
      j0=1 ; j1=1 ; j2=1 ; j3=1 ; k0=1 ; k1=1 ; k2=1 ; k3=1; 
      clr = (q3 && ~q2 && q1 && ~q0);
      o = {q3,q2,q1,q0};
    end
endmodule

//Test Bench
module test;
  reg clk,rst;
  reg[3:0] o;
  count x(clk,rst,o);
  
  initial
    begin
      clk = 0;
      forever #5 clk = ~clk;
    end
  
  initial
    begin
      $dumpfile("test.vcd");
      $dumpvars(1);
      rst = 1;
      #20 rst = 0;
      #30 $display(o);
      #150 $finish;
    end
endmodule
